class TresEnLinea{constructor(t){this.canvas=t,this.context=this.canvas.getContext("2d"),this.coordinates=this.coordinates.bind(this),this.selectFigure(),this.inicialize()}inicialize(){this.gameTitle="TresEnLinea",this.newGame=!0,this.coordinatesExists=[],this.ThreeInLine=[],this.isMyTurn=!0,this.lineWidth=1,this.board(),this.changeTurn(),this.limits={100:100,200:200,300:300}}messages({text:t,icon:i,cancelText:e="",catchText:s=""}){swal({title:this.gameTitle,text:t,icon:i,buttons:{cancel:e,catch:{text:s,value:"catch"}}}).then(t=>{switch(t){case"catch":window.location.reload();break;default:return!1}})}changeTurn(){this.isMyTurn?this.addEvent():this.bot()}whoWins(){if(this.coordinatesExists.length>=3){const t=this.coordinatesExists.filter(t=>t.figure===this.figures.myFigure),i=this.coordinatesExists.filter(t=>t.figure===this.figures.botFigure);this.evaluateWinner(t,"You"),this.evaluateWinner(i,"Bot")}}evaluateWinner(t,i){if(!this.newGame){let e;for(let i=0;i<=t.length-1;i++)this.ThreeInLine.push(t[i]);this.isMyTurn="You"===i;const s=this.filterCoordinates(this.ThreeInLine,"x"),n=this.filterCoordinates(this.ThreeInLine,"y"),r=this.filterSpecialCoordinates(this.ThreeInLine);e=s.position?s.line:n.position?n.line:r.position?r.line:[],s.position|n.position|r.position?(this.line(...e),this.messages({text:`${"You"===i?"Ganaste, eres increible!":"[Bot dice] Ja! Te ganÃ©."} \n Â¿Quieres jugar de nuevo?`,icon:"You"===i?"success":"warning",cancelText:"Cancelar",catchText:"Aceptar"}),this.ThreeInLine=[],this.newGame=!0,this.isMyTurn?clearTimeout(this.botTime):this.removeEvent()):this.ThreeInLine=[]}}filterCoordinates(t,i){let e;const s=3===t.filter(t=>t[i]===this.limits[100]).length,n=3===t.filter(t=>t[i]===this.limits[200]).length,r=3===t.filter(t=>t[i]===this.limits[300]).length;return s&&"x"===i?e=[50,0,50,300]:n&&"x"===i?e=[150,0,150,300]:r&&"x"===i?e=[250,0,250,300]:s&&"y"===i?e=[0,50,300,50]:n&&"y"===i?e=[0,150,300,150]:r&&"y"===i&&(e=[0,250,300,250]),{position:s||n||r,line:e}}filterSpecialCoordinates(t){let i;const e=3===t.filter(t=>t.x===t.y).length,s=t.some(t=>t.x===this.limits[300]&&t.y===this.limits[100]),n=t.some(t=>t.x===this.limits[200]&&t.y===this.limits[200]),r=t.some(t=>t.x===this.limits[100]&&t.y===this.limits[300]);return e?i=[0,0,300,300]:s&&n&&r&&(i=[300,0,0,300]),{position:e||s&&n&&r,line:i}}selectFigure(){swal({title:"TresEnLinea",text:"Â¿Con quÃ© figura quieres jugar?",buttons:{cross:{text:"X"},circle:{text:"O"}}}).then(t=>{let i,e;switch(t){case"cross":i=1,e=2;break;case"circle":i=2,e=1;break;default:this.messages({text:"Â¡Vaya!, no conozco esa figura, intentalo de nuevo ðŸ¤”",icon:"warning",cancelText:"Cancelar",catchText:"Empezar de nuevo"})}this.figures={myFigure:i,botFigure:e}})}board(){for(let t=1;t<3;t++){let i=100*t;this.line(i,0,i,300),this.line(0,i,300,i)}}addEvent(){this.canvas.addEventListener("click",this.coordinates)}removeEvent(){this.canvas.removeEventListener("click",this.coordinates)}bot(){const t=100*this.randomNumber(1,3),i=100*this.randomNumber(1,3);this.removeEvent(),this.evaluateCoordinatesExists(t,i)&&(this.botTime=setTimeout(()=>{this.putFigure(t,i)},300),this.coordinatesExists.push({x:t,y:i,figure:this.figures.botFigure}))}evaluateCoordinatesExists(t,i){if(this.newGame)return this.newGame=!1,!0;if(this.coordinatesExists.length<=8){for(let e of this.coordinatesExists)if(t===e.x&&i===e.y)return this.isMyTurn?(swal({title:this.gameTitle,text:"Oh vaya! Esa posiciÃ³n esta ocupada, intenta en otra ðŸ˜‰",icon:"error",button:{text:"Aceptar"}}),!1):(this.bot(),!1);return!0}setTimeout(()=>{this.newGame||this.messages({text:"Jejeje, parece que ninguno ganÃ³, Â¿que tal otra partida? ðŸ˜…",icon:"error",cancelText:"Cancelar",catchText:"Aceptar"})},500)}coordinates(t){let i=t.offsetX,e=t.offsetY,s=this.evaluateCoordinates(i),n=this.evaluateCoordinates(e);this.evaluateCoordinatesExists(s,n)&&(this.coordinatesExists.push({x:s,y:n,figure:this.figures.myFigure}),this.putFigure(s,n),this.whoWins())}evaluateCoordinates(t){for(let i in this.limits)if(t<=this.limits[i]-5)return this.limits[i]}putFigure(t,i){let e=0;this.isMyTurn?(e=this.figures.myFigure,this.isMyTurn=!1):(e=this.figures.botFigure,this.isMyTurn=!0),1===e?this.cross(t,i):2===e&&this.circle(t,i),this.newGame||this.changeTurn()}randomNumber(t,i){return Math.floor(Math.random()*(i-t+1))+t}cross(t,i){this.line(t-90,i-90,t-10,i-10),this.line(t-10,i-90,t-90,i-10)}circle(t,i){this.context.beginPath(),this.context.arc(t-50,i-50,40,0,2*Math.PI),this.context.stroke()}line(t,i,e,s){this.context.lineWidth=this.lineWidth,this.context.beginPath(),this.context.lineTo(t,i),this.context.lineTo(e,s),this.context.closePath(),this.context.stroke()}}